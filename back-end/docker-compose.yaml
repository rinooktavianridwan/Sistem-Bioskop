services:
  postgres:
    image: postgres:16
    container_name: movieapp_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "60002:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8.0.1
    ports:
      - "60003:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  movieapp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: movieapp_backend
    depends_on:
      - postgres
      - redis
    ports:
       - "60000:3000"
    volumes:
      - ./uploads:/app/uploads
    env_file:
      - .env
    restart: unless-stopped

  migrate:
    image: migrate/migrate
    depends_on:
      - postgres
    volumes:
      - ./database/migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "postgres://postgres:adminrino@postgres:5432/movie-app-go?sslmode=disable",
      "up"
    ]

volumes:
  pgdata: {}
  redis-data: {}
